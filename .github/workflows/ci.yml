# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: [series/3.x]
  push:
    branches: [series/3.x]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, ARM64]
        scala: [3.0.0, 2.12.14, 2.13.6]
        java:
          - adopt@1.8
          - adopt@1.11
          - adopt@1.16
          - graalvm-ce-java8@21.1
        ci: [ciJVM, ciJS, ciFirefox]
        exclude:
          - ci: ciJS
            java: adopt@1.11
          - ci: ciJS
            java: adopt@1.16
          - ci: ciJS
            java: graalvm-ce-java8@21.1
          - os: windows-latest
            scala: 3.0.0
          - os: windows-latest
            scala: 2.12.14
          - os: ARM64
            scala: 2.12.14
          - os: ARM64
            scala: 2.13.6
          - os: ARM64
            java: adopt@1.8
          - os: ARM64
            java: adopt@1.16
          - os: ARM64
            java: graalvm-ce-java8@21.1
          - os: windows-latest
            ci: ciJS
          - os: ARM64
            ci: ciJS
          - ci: ciFirefox
            java: adopt@1.11
          - ci: ciFirefox
            java: adopt@1.16
          - ci: ciFirefox
            java: graalvm-ce-java8@21.1
          - os: windows-latest
            scala: 3.0.0
          - os: windows-latest
            scala: 2.12.14
          - os: ARM64
            scala: 2.12.14
          - os: ARM64
            scala: 2.13.6
          - os: ARM64
            java: adopt@1.8
          - os: ARM64
            java: adopt@1.16
          - os: ARM64
            java: graalvm-ce-java8@21.1
          - os: windows-latest
            ci: ciFirefox
          - os: ARM64
            ci: ciFirefox
          - java: adopt@1.16
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        shell: bash
        run: git config --global core.autocrlf false

      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Setup NodeJS v14 LTS
        if: matrix.ci == 'ciJS'
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Check that workflows are up to date
        shell: bash
        run: sbt --client '++${{ matrix.scala }}; githubWorkflowCheck'

      - shell: bash
        run: sbt --client '++${{ matrix.scala }}; ${{ matrix.ci }}'

      - if: matrix.scala == '2.13.6' && matrix.ci == 'ciJVM'
        shell: bash
        run: sbt --client '++${{ matrix.scala }}; docs/mdoc'

      - if: matrix.ci == 'ciJVM' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: sbt --client '++${{ matrix.scala }}; exampleJVM/compile'

      - if: matrix.ci == 'ciJS' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: sbt --client '++${{ matrix.scala }}; exampleJS/compile'

      - name: Test Example JVM App Within Sbt
        if: matrix.ci == 'ciJVM' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: example/test-jvm.sh ${{ matrix.scala }}

      - name: Test Example JavaScript App Using Node
        if: matrix.ci == 'ciJS' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: example/test-js.sh ${{ matrix.scala }}

      - name: Scalafix tests
        if: matrix.scala == '2.13.6' && matrix.ci == 'ciJVM' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          cd scalafix
          sbt test